# 🔍 Raleskip Portfolio - Preview Deployment Workflow
# Creates preview deployments for pull requests

name: 🔍 Preview Deployment

on:
  pull_request:
    branches: [main, master]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18.18.0'

jobs:
  # 🔍 PR Quality Checks
  pr-quality-check:
    name: 🔍 PR Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: ⚡ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 Type checking
        run: npm run type-check

      - name: 🎨 Code formatting check
        run: npm run format:check

      - name: 🏗️ Build test
        run: npm run build

  # 🌐 Deploy Preview
  deploy-preview:
    name: 🌐 Deploy Preview
    runs-on: ubuntu-latest
    needs: pr-quality-check
    environment:
      name: preview
    steps:
      - name: ⚡ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🚀 Deploy Preview to Vercel
        uses: amondnet/vercel-action@v25
        id: vercel-preview
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

      - name: 🌊 Deploy Preview to Netlify
        uses: nwtgck/actions-netlify@v3.0
        id: netlify-preview
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "🔍 Preview from PR #${{ github.event.number }}"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: 💬 Comment Preview URLs
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🔍 Preview Deployment')
            );

            const commentBody = `## 🔍 Preview Deployment Ready!

            🚀 **Vercel Preview**: ${{ steps.vercel-preview.outputs.preview-url }}
            🌊 **Netlify Preview**: ${{ steps.netlify-preview.outputs.deploy-url }}

            📊 **Changes in this PR:**
            - Commit: \`${{ github.event.pull_request.head.sha }}\`
            - Branch: \`${{ github.event.pull_request.head.ref }}\`

            ✅ All quality checks passed!
            
            ---
            *Preview deployments are automatically updated when you push new commits.*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }